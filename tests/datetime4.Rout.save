
R Under development (unstable) (2022-11-02 r83231) -- "Unsuffered Consequences"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin22.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### more date-time tests where the output is to be checked.
> 
> ## Expect differences, especially for platforms without tm_zone/tm_gmtoff.
> 
> options(warn = 1L)
> 
> ## tests of "POSIXlt" objects
> xU <- strptime("2022-01-01", "%Y-%m-%d", tz = "UTC")
> xU
[1] "2022-01-01 UTC"
> str(unclass(xU))
List of 9
 $ sec  : num 0
 $ min  : int 0
 $ hour : int 0
 $ mday : int 1
 $ mon  : int 0
 $ year : int 122
 $ wday : int 6
 $ yday : int 0
 $ isdst: int 0
 - attr(*, "tzone")= chr "UTC"
 - attr(*, "balanced")= logi TRUE
> 
> x0 <- strptime("2022-01-01", "%Y-%m-%d")
> x0
[1] "2022-01-01 GMT"
> str(unclass(x0)) # no tzone attribute
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 0
 $ mday  : int 1
 $ mon   : int 0
 $ year  : int 122
 $ wday  : int 6
 $ yday  : int 0
 $ isdst : int 0
 $ zone  : chr "GMT"
 $ gmtoff: int NA
 - attr(*, "balanced")= logi TRUE
> 
> x1 <- strptime("2022-07-01", "%Y-%m-%d", tz = "Europe/London")
> x1
[1] "2022-07-01 BST"
> str(unclass(x1)) # gmtoff is NA
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 0
 $ mday  : int 1
 $ mon   : int 6
 $ year  : int 122
 $ wday  : int 5
 $ yday  : int 181
 $ isdst : int 1
 $ zone  : chr "BST"
 $ gmtoff: int NA
 - attr(*, "tzone")= chr [1:3] "Europe/London" "GMT" "BST"
 - attr(*, "balanced")= logi TRUE
> 
> ## nonsense offset  value
> x2 <- strptime("2022-01-01 +0300", "%Y-%m-%d %z", tz = "Europe/London")
> x2 # no tzone printed
[1] "2021-12-31 21:00:00"
> str(unclass(x2))
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 21
 $ mday  : int 31
 $ mon   : int 11
 $ year  : int 121
 $ wday  : int 5
 $ yday  : int 364
 $ isdst : int 0
 $ zone  : chr ""
 $ gmtoff: int 10800
 - attr(*, "tzone")= chr [1:3] "Europe/London" "GMT" "BST"
 - attr(*, "balanced")= logi TRUE
> x3 <- as.POSIXlt(as.POSIXct(x2))
> x3
[1] "2021-12-31 21:00:00 GMT"
> str(unclass(x3)) # uses wrong gmtoff.
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 21
 $ mday  : int 31
 $ mon   : int 11
 $ year  : int 121
 $ wday  : int 5
 $ yday  : int 364
 $ isdst : int 0
 $ zone  : chr "GMT"
 $ gmtoff: int 0
 - attr(*, "tzone")= chr [1:3] "Europe/London" "GMT" "BST"
 - attr(*, "balanced")= logi TRUE
> 
> x4 <- strptime("2022-07-01", "%Y-%m-%d", tz ="Pacific/Fiji")
> x4
[1] "2022-07-01 +12"
> str(unclass(x4)) # abbreviations may be numbers.
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 0
 $ mday  : int 1
 $ mon   : int 6
 $ year  : int 122
 $ wday  : int 5
 $ yday  : int 181
 $ isdst : int 0
 $ zone  : chr "+12"
 $ gmtoff: int NA
 - attr(*, "tzone")= chr [1:3] "Pacific/Fiji" "+12" "+13"
 - attr(*, "balanced")= logi TRUE
> x5 <- strptime("2022-07-01", "%Y-%m-%d", tz ="Pacific/Kiritimati")
> x5
[1] "2022-07-01 +14"
> str(unclass(x5)) # does not have DST, hence no DST abbreviation on some platforms
List of 11
 $ sec   : num 0
 $ min   : int 0
 $ hour  : int 0
 $ mday  : int 1
 $ mon   : int 6
 $ year  : int 122
 $ wday  : int 5
 $ yday  : int 181
 $ isdst : int 0
 $ zone  : chr "+14"
 $ gmtoff: int NA
 - attr(*, "tzone")= chr [1:3] "Pacific/Kiritimati" "+14" "   "
 - attr(*, "balanced")= logi TRUE
> 
> ## edge of range and out of range offsets
> strptime("2022-01-01 +1400", "%Y-%m-%d %z", tz = "Europe/London")
[1] "2021-12-31 10:00:00"
> strptime("2022-01-01 -1400", "%Y-%m-%d %z", tz = "Europe/London")
[1] "2022-01-01 14:00:00"
> strptime("2022-01-01 +1500", "%Y-%m-%d %z", tz = "Europe/London")
Warning in strptime("2022-01-01 +1500", "%Y-%m-%d %z", tz = "Europe/London") :
  values for %z outside +/-1400 are an error
[1] NA
> strptime("2022-01-01 -1500", "%Y-%m-%d %z", tz = "Europe/London")
Warning in strptime("2022-01-01 -1500", "%Y-%m-%d %z", tz = "Europe/London") :
  values for %z outside +/-1400 are an error
[1] NA
> 
